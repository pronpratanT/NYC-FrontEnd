พับได้
'use client';

import { useState } from 'react';
import { usePathname } from 'next/navigation';
import {
  FaBook, FaCar, FaTools, FaDesktop, FaWrench, FaClipboardCheck,
  FaCreditCard, FaServer, FaBoxOpen, FaShoppingCart, FaChevronDown,
  FaLink, FaLeaf, FaDownload, FaCode, FaClock, FaChartLine, FaKey, FaUser,
  FaFileInvoice, FaClipboardList
} from 'react-icons/fa';
import { RiDashboardFill } from "react-icons/ri";
import { BsPersonFillGear } from "react-icons/bs";
import { HiUserGroup } from "react-icons/hi2";
import Link from 'next/link';
import { useTheme } from './ThemeProvider';


const menu = [
  { label: 'Dashboard', icon: RiDashboardFill, href: process.env.NEXT_PUBLIC_LOGIN_SUCCESS_REDIRECT || '/nycsystem' },
  { label: 'คู่มือการใช้งาน', icon: FaBook, href: process.env.NEXT_PUBLIC_MANUAL_REDIRECT || '/manual' },
];

const system = [
  { label: 'ระบบจัดการเครื่องจักร', icon: FaTools },
  { label: 'ระบบจัดการรถยนต์ NYC', icon: FaCar },
  { label: 'ระบบแจ้งงาน ECONS', icon: FaTools },
  { label: 'ระบบแจ้งงาน IT Support', icon: FaDesktop },
  { label: 'ระบบแจ้งซ่อมบำรุง', icon: FaWrench },
  { label: 'ระบบตรวจสอบมาตรฐานการผลิต', icon: FaClipboardCheck },
];

const programs = [
  { label: 'FeetCard', icon: FaCreditCard },
  { label: 'N.Y.C. Server IS', icon: FaServer },
  { label: 'Packing Check', icon: FaBoxOpen },
  {
    label: 'ระบบจัดซื้อ',
    icon: FaShoppingCart,
    subItems: [
      { label: 'Purchase Request (PR)', icon: FaClipboardList, href: process.env.NEXT_PUBLIC_PURCHASE_PR_REDIRECT || '/services/purchase' },
      { label: 'Purchase Order (PO)', icon: FaFileInvoice, href: process.env.NEXT_PUBLIC_PURCHASE_PO_REDIRECT || '/nycsystem/services/purchase/PO' },
    ]
  },
  { label: 'เชื่อมโยงแอปฯ', icon: FaLink },
  { label: 'Emerald Website', icon: FaLeaf },
  { label: 'Download YT', icon: FaDownload },
  { label: 'IT Service API', icon: FaCode },
  { label: 'คู่มือ OT', icon: FaClock },
  { label: 'คู่มือแผนการผลิต', icon: FaChartLine },
];


const admin = [
  { label: 'จัดการข้อมูลพนักงาน', icon: FaUser, href: '/user' },
  { label: 'จัดการสถานะพนักงาน', icon: BsPersonFillGear, href: '/userStatus' },
  { label: 'กำหนดสิทธิแผนก', icon: HiUserGroup, href: '/admin' },
  { label: 'Tokens', icon: FaKey, href: '/token' },
  // เพิ่มเมนูอื่น ๆ ได้ง่าย
];

export default function Sidebar() {
  const { isDarkMode } = useTheme();
  const pathname = usePathname();
  const purchaseMenuPath = process.env.NEXT_PUBLIC_PURCHASE_PR_REDIRECT || '/services/purchase';
  const [showPurchaseMenu, setShowPurchaseMenu] = useState(pathname.startsWith(purchaseMenuPath));
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [sidebarMini, setSidebarMini] = useState(false); // เพิ่ม state สำหรับ mini sidebar

  // Helper function to check if current path matches the item
  const isPathActive = (item: { href?: string; label: string }) => {
    if (!item.href) return false;
    const dashboardRootPath = process.env.NEXT_PUBLIC_LOGIN_SUCCESS_REDIRECT || '/nycsystem/';
    if (item.href === dashboardRootPath && pathname === dashboardRootPath) return true;
    // ...existing code for path matching...
    const purchaseMenuPath = process.env.NEXT_PUBLIC_PURCHASE_PR_REDIRECT || '/services/purchase';
    const purchasePOPath = process.env.NEXT_PUBLIC_PURCHASE_PO_REDIRECT || '/nycsystem/services/purchase/PO';
    if (item.href === purchaseMenuPath && pathname === purchaseMenuPath) return true;
    if (item.href === purchasePOPath && pathname.startsWith(purchasePOPath)) return true;
    if (item.href !== dashboardRootPath && item.href !== purchaseMenuPath && pathname.startsWith(item.href)) return true;
    return false;
  };

  // ...renderItem and renderSectionTitle functions (unchanged)...
  type SidebarSubItem = { label: string; icon: React.ComponentType; href?: string };
  const renderItem = (item: { label: string; icon: React.ComponentType; href?: string; subItems?: SidebarSubItem[] }, key: string, isSubItem: boolean = false) => {
    const isActive = isPathActive(item);
    const Icon = item.icon;
    const hasSubItems = item.subItems && item.subItems.length > 0;
    const commonClass = `group relative w-full flex items-center gap-3 px-3 py-2.5 rounded-lg transition-all duration-150 text-sm text-left outline-none ` +
      (isActive
        ? (isDarkMode ? 'text-green-400 font-medium bg-green-900/20' : 'text-[#0f9015] font-medium bg-green-50')
        : (isDarkMode ? 'text-slate-300 hover:text-green-400 hover:bg-slate-800/50' : 'text-slate-600 hover:text-[#0f9015] hover:bg-slate-50')) +
      ' focus:ring-1 focus:ring-offset-0 ' + (isDarkMode ? 'focus:ring-green-400/30' : 'focus:ring-green-300/50');

    if (item.href && !hasSubItems) {
      return (
        <Link href={item.href} key={key} className={commonClass} aria-pressed={isActive}>
          {isActive && (
            <div className={`absolute left-0 top-1/2 -translate-y-1/2 w-1 h-5 rounded-r transition-all duration-200 ${isDarkMode ? 'bg-green-400' : 'bg-[#0f9015]'}`} />
          )}
          <span className={`text-base transition-all duration-150 ${isActive ? (isDarkMode ? 'text-green-400' : 'text-[#0f9015]') : (isDarkMode ? 'text-slate-400 group-hover:text-green-400' : 'text-slate-400 group-hover:text-[#0f9015]')}`}>
            <Icon />
          </span>
          {!sidebarMini && <span className="truncate font-medium">{item.label}</span>}
        </Link>
      );
    }

    if (hasSubItems && item.label === 'ระบบจัดซื้อ') {
      const isExpanded = showPurchaseMenu;
      const hasActiveSubItem = item.subItems?.some((subItem) => isPathActive(subItem));
      const parentClass = `group relative w-full flex items-center gap-3 px-3 py-2.5 rounded-lg transition-all duration-150 text-sm text-left outline-none justify-between cursor-pointer ` +
        (hasActiveSubItem
          ? (isDarkMode ? 'text-green-400 font-medium bg-green-900/20' : 'text-[#0f9015] font-medium bg-green-50')
          : (isDarkMode ? 'text-slate-300 hover:text-green-400 hover:bg-slate-800/50' : 'text-slate-600 hover:text-[#0f9015] hover:bg-slate-50')) +
        ' focus:ring-1 focus:ring-offset-0 ' + (isDarkMode ? 'focus:ring-green-400/30' : 'focus:ring-green-300/50');
      return (
        <div key={key} className="space-y-1">
          <button
            onClick={() => setShowPurchaseMenu(!showPurchaseMenu)}
            className={parentClass}
          >
            {hasActiveSubItem && (
              <div className={`absolute left-0 top-1/2 -translate-y-1/2 w-1 h-5 rounded-r transition-all duration-200 ${isDarkMode ? 'bg-green-400' : 'bg-[#0f9015]'}`} />
            )}
            <div className="flex items-center gap-3">
              <span className={`text-base transition-all duration-150 ${hasActiveSubItem ? (isDarkMode ? 'text-green-400' : 'text-[#0f9015]') : (isDarkMode ? 'text-slate-400 group-hover:text-green-400' : 'text-slate-400 group-hover:text-[#0f9015]')}`}>
                <Icon />
              </span>
              {!sidebarMini && <span className="truncate font-medium">{item.label}</span>}
            </div>
            {!sidebarMini && <FaChevronDown className={`text-xs transition-transform duration-200 ${hasActiveSubItem ? (isDarkMode ? 'text-green-400' : 'text-[#0f9015]') : (isDarkMode ? 'text-slate-400' : 'text-slate-400')} ${isExpanded ? 'rotate-180' : ''}`} />}
          </button>
          <div className={`ml-6 space-y-0.5 transition-all duration-300 ${isExpanded ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0 overflow-hidden'}`}>{item.subItems?.map((subItem, subIndex) => renderItem(subItem, `${key}-sub-${subIndex}`, true))}</div>
        </div>
      );
    }

    if (hasSubItems) {
      return (
        <div key={key} className="space-y-1">
          <div className={`px-3 py-2 ${isDarkMode ? 'text-slate-400' : 'text-slate-500'}`}>
            <div className="flex items-center gap-3">
              <span className={`text-base ${isDarkMode ? 'text-slate-500' : 'text-slate-400'}`}>
                <Icon />
              </span>
              {!sidebarMini && <span className="truncate font-medium">{item.label}</span>}
            </div>
          </div>
          <div className="ml-6 space-y-0.5">{item.subItems?.map((subItem, subIndex) => renderItem(subItem, `${key}-sub-${subIndex}`, true))}</div>
        </div>
      );
    }

    return (
      <div key={key} className={`px-3 py-2.5 ${isDarkMode ? 'text-slate-400' : 'text-slate-500'}`}>
        <div className="flex items-center gap-3">
          <span className={`text-base ${isDarkMode ? 'text-slate-500' : 'text-slate-400'}`}>
            <Icon />
          </span>
          {!sidebarMini && <span className="truncate font-medium">{item.label}</span>}
        </div>
      </div>
    );
  };

  const renderSectionTitle = (title: string) => (
    !sidebarMini ? (
      <div className={`px-1 pb-2 text-xs font-medium uppercase tracking-wider ${isDarkMode ? 'text-slate-500' : 'text-slate-400'}`}>{title}</div>
    ) : null
  );

  return (
    <>
      {/* Responsive sidebar toggle button (mobile only) */}
      <button
        className="fixed top-4 left-4 z-[10001] flex items-center justify-center w-10 h-10 rounded-lg bg-green-600 text-white shadow-lg lg:hidden"
        onClick={() => setSidebarOpen((v) => !v)}
        aria-label="เปิด/ปิดเมนู"
      >
        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>

      {/* Mini/collapse toggle for desktop */}
      <button
        className="hidden lg:flex fixed top-7 left-[17.5rem] z-[10001] items-center justify-center w-8 h-8 rounded-full bg-green-100 text-green-700 shadow-md border border-green-200 transition-all duration-200 hover:bg-green-200 hover:text-green-900"
        style={{
          transform: sidebarMini ? 'translateX(-11.5rem)' : 'translateX(0)',
          transition: 'transform 0.2s',
        }}
        onClick={() => setSidebarMini((v) => !v)}
        aria-label={sidebarMini ? 'ขยายเมนู' : 'ย่อเมนู'}
      >
        <svg className={`w-5 h-5 transition-transform duration-200 ${sidebarMini ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M20 12H4" />
        </svg>
      </button>

      <aside
        className={`fixed top-0 left-0 h-full border rounded-none lg:rounded-2xl flex flex-col z-40 shadow-xl transition-all duration-200
        ${isDarkMode ? 'bg-gray-900 border-gray-700' : 'bg-white border-[#D4E6DA]'}
        ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'}
        lg:translate-x-0
        ${sidebarMini ? 'w-16 lg:w-16' : 'w-64 lg:w-72'}
        lg:left-6 lg:top-6 lg:h-[calc(100vh-3rem)]
        `}
        style={{ transitionProperty: 'transform, box-shadow, background-color, border-color, width', width: sidebarMini ? '4rem' : '18rem' }}
      >
        {/* Header + Close button for mobile */}
        <div className={`px-5 py-5 flex items-center ${sidebarMini ? 'justify-center' : 'gap-4 justify-between'}`} style={{ borderBottom: isDarkMode ? '1px solid #374151' : '1px solid #d1d5db' }}>
          {/* Logo */}
          <div className="w-12 h-12 rounded-lg flex items-center justify-center shadow-lg shrink-0" style={{
            background: isDarkMode ? 'linear-gradient(135deg, #166534 0%, #16a34a 50%, #22c55e 100%)' : 'linear-gradient(135deg, #166534 0%, #16a34a 50%, #22c55e 100%)',
          }}>
            <span className="text-lg font-bold text-white">NYC</span>
          </div>
          {/* Text: NYC INDUSTRY */}
          {!sidebarMini && (
            <div className="flex flex-col flex-1 min-w-0 ml-2">
              <div className={`text-lg font-bold truncate ${isDarkMode ? 'text-green-400' : 'text-green-700'}`} style={{ letterSpacing: "1px" }}>NYC</div>
              <div className={isDarkMode ? 'text-xs text-gray-400 font-medium truncate' : 'text-xs text-gray-600 font-medium truncate'}>INDUSTRY CO.,LTD.</div>
            </div>
          )}
          {/* Close button for mobile */}
          {!sidebarMini && (
            <button
              className="lg:hidden flex items-center justify-center w-8 h-8 rounded-md bg-gray-200 dark:bg-gray-800 text-gray-700 dark:text-gray-200 ml-auto"
              onClick={() => setSidebarOpen(false)}
              aria-label="ปิดเมนู"
            >
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          )}
        </div>

        {/* Navigation with custom scrollbar */}
        <nav className={`flex-1 overflow-y-auto py-6 space-y-8 ${sidebarMini ? 'px-1' : 'px-3'}`}
          style={{
            scrollbarWidth: 'thin',
            WebkitOverflowScrolling: 'touch',
            maxHeight: 'calc(100vh - 180px)',
          }}
        >
          {/* Menu Section */}
          <section>
            {renderSectionTitle('Menu')}
            <div className="space-y-0.5">{menu.map((m, i) => renderItem(m, `menu-${i}`))}</div>
          </section>
          {/* System Section */}
          <section>
            {renderSectionTitle('System')}
            <div className="space-y-0.5">{system.map((s, i) => renderItem(s, `sys-${i}`))}</div>
          </section>
          {/* Programs Section */}
          <section>
            {renderSectionTitle('Programs')}
            <div className="space-y-0.5">{programs.map((p, i) => renderItem(p, `prog-${i}`))}</div>
          </section>
          {/* Admin Section */}
          <section>
            {renderSectionTitle('Admin')}
            <div className="space-y-0.5">{admin.map((p, i) => renderItem(p, `admin-${i}`))}</div>
          </section>
        </nav>

        {/* Footer Section */}
        {!sidebarMini && (
          <footer className={`px-3 py-4 border-t ${isDarkMode ? 'border-slate-700/50' : 'border-slate-200'}`}>
            <div className="space-y-3">
              {/* Version Info */}
              <div className={`flex items-center justify-between text-xs ${isDarkMode ? 'text-slate-500' : 'text-slate-400'}`}>
                <span className="font-medium">Version</span>
                <span className={`px-2 py-1 rounded-md font-mono ${isDarkMode ? 'bg-slate-800/50 text-slate-400' : 'bg-slate-100 text-slate-600'}`}>v0.1.0-beta</span>
              </div>
              {/* Developed by */}
              <div className={`text-center space-y-1`}>
                <div className={`text-xs ${isDarkMode ? 'text-slate-500' : 'text-slate-400'}`}>จัดทำโดย</div>
                <div className={`flex items-center justify-center gap-2`}>
                  <div className={`w-6 h-6 rounded flex items-center justify-center ${isDarkMode ? 'bg-blue-900/30' : 'bg-blue-100'}`}>
                    <svg xmlns="http://www.w3.org/2000/svg" className={`h-3 w-3 ${isDarkMode ? 'text-blue-400' : 'text-blue-500'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
                    </svg>
                  </div>
                  <div className="text-xs">
                    <div className={`font-semibold ${isDarkMode ? 'text-slate-300' : 'text-slate-600'}`}>แผนก IT</div>
                    <div className={`${isDarkMode ? 'text-slate-500' : 'text-slate-400'}`}>Information Technology</div>
                  </div>
                </div>
              </div>
              {/* Copyright */}
              <div className={`text-center text-xs ${isDarkMode ? 'text-slate-600' : 'text-slate-400'}`}>© 2025 NYC Industry Co.,Ltd.</div>
            </div>
          </footer>
        )}

        {/* Custom scrollbar styles - minimal and clean */}
        <style jsx global>{`
          nav::-webkit-scrollbar {
            width: 4px;
          }
          nav::-webkit-scrollbar-track {
            background: transparent;
          }
          nav::-webkit-scrollbar-thumb {
            background: ${isDarkMode ? '#475569' : '#cbd5e1'};
            border-radius: 2px;
          }
          nav::-webkit-scrollbar-thumb:hover {
            background: ${isDarkMode ? '#64748b' : '#94a3b8'};
          }
          nav::-webkit-scrollbar-button {
            display: none;
          }
          nav {
            scrollbar-width: thin;
            scrollbar-color: ${isDarkMode ? '#475569 transparent' : '#cbd5e1 transparent'};
          }
        `}</style>
      </aside>
      {/* Overlay for mobile when sidebar is open */}
      {sidebarOpen && (
        <div
          className="fixed inset-0 z-30 bg-black/30 backdrop-blur-sm lg:hidden"
          onClick={() => setSidebarOpen(false)}
          aria-label="ปิดเมนู (คลิกพื้นหลัง)"
        />
      )}
    </>
  );
}