'use client';

import Sidebar from '../../../components/sidebar';
import Header from '../../../components/header';
import { useEffect, useState, useRef } from 'react';
import { useRouter } from 'next/navigation';
import DatePicker from 'react-datepicker';
import "react-datepicker/dist/react-datepicker.css";
import { FaRegCalendarAlt, FaArrowLeft } from "react-icons/fa";
import { TiDeleteOutline } from "react-icons/ti";
import { RiDeleteBin6Line } from "react-icons/ri";
import { useTheme } from '../../../components/ThemeProvider';

export default function TestPage() {
  const router = useRouter();
  const { isDarkMode } = useTheme();
  const [partNos, setPartNos] = useState<string[]>([]);
  const [error, setError] = useState<string | null>(null);
  const [loading, setLoading] = useState<boolean>(false);
  const [search, setSearch] = useState<string>("");
  const [selectedParts, setSelectedParts] = useState<string[]>([]);
  const [dueDate, setDueDate] = useState<Date | null>(null);
  const [rowDueDates, setRowDueDates] = useState<(Date | null)[]>([]);
  const [showDropdown, setShowDropdown] = useState(false);
  const inputRef = useRef<HTMLInputElement>(null);
  const dropdownRef = useRef<HTMLDivElement>(null);

  // Sync rowDueDates with selectedParts
  useEffect(() => {
    setRowDueDates(selectedParts.map((_, idx) => rowDueDates[idx] || null));
  }, [selectedParts]);

  const handleRowDueDateChange = (idx: number, date: Date | null) => {
    setRowDueDates(prev => {
      const arr = [...prev];
      arr[idx] = date;
      return arr;
    });
  };

  useEffect(() => {
    if (!search) {
      setPartNos([]);
      setShowDropdown(false);
      return;
    }
    const fetchData = async () => {
      try {
        setLoading(true);
        setError(null);
        const response = await fetch(`/api/proxy/purchase/search-part-no?keyword=${encodeURIComponent(search)}`, { cache: "no-store" });
        if (!response.ok) {
          throw new Error(`PartNo API error: HTTP ${response.status} ${response.statusText}`);
        }
        const data = await response.json();
        const arr = Array.isArray(data.data) ? data.data : [];
        setPartNos(arr);
        setShowDropdown(true);
      } catch (err: any) {
        setError(err.message || "เกิดข้อผิดพลาดในการดึงข้อมูล");
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, [search]);

  useEffect(() => {
    if (!showDropdown) return;
    function handleClickOutside(event: MouseEvent) {
      if (
        inputRef.current && !inputRef.current.contains(event.target as Node) &&
        dropdownRef.current && !dropdownRef.current.contains(event.target as Node)
      ) {
        setShowDropdown(false);
      }
    }
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [showDropdown]);

  // ฟังก์ชันลบแถว
  const handleDeleteRow = (idx: number) => {
    setSelectedParts(selectedParts.filter((_, i) => i !== idx));
    setRowDueDates(rowDueDates.filter((_, i) => i !== idx));
  };

  // Pagination
  const [page, setPage] = useState(1);
  const rowsPerPage = 10;
  const totalPages = Math.ceil(selectedParts.length / rowsPerPage);
  const pagedParts = selectedParts.slice((page - 1) * rowsPerPage, page * rowsPerPage);
  const pagedDueDates = rowDueDates.slice((page - 1) * rowsPerPage, page * rowsPerPage);

  return (
    <div className="min-h-screen relative">
      {/* Main Content */}
      <main
        className="mt-[7.5rem] mr-6 transition-all duration-300 relative"
        style={{ minHeight: 'calc(100vh - 3rem)', position: 'relative', marginLeft: 'calc(18rem + 55px)' }}
      >
        <div className="max-w-none w-full space-y-8 mb-6 relative z-10">
          {/* Header Section */}
          {/* <div className="text-center">
            <h1 className="text-3xl font-bold text-gray-900 mb-2">ระบบจัดซื้อ</h1>
            <p className="text-gray-600">Purchase Requisition System</p>
          </div> */}
          {/* Modern PR Info Grid */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-10">
            <div className={`rounded-2xl p-6 shadow-sm border flex flex-col justify-between ${isDarkMode ? 'bg-slate-900/50 border-slate-700/50' : 'bg-white border-gray-100'}`}>
              <div className="flex items-center gap-3 mb-2">
                <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${isDarkMode ? 'bg-blue-900/30' : 'bg-blue-100'}`}>
                  <svg xmlns="http://www.w3.org/2000/svg" className={`h-6 w-6 ${isDarkMode ? 'text-blue-400' : 'text-blue-500'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                </div>
                <span className={`font-semibold ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>หมายเลข PR</span>
              </div>
              <div className={`text-lg font-bold mb-1 ${isDarkMode ? 'text-slate-200' : 'text-gray-900'}`}>PR-2025-001</div>
              <div className={`text-xs ${isDarkMode ? 'text-slate-500' : 'text-gray-400'}`}>สถานะ: รอดำเนินการ</div>
            </div>
            <div className={`rounded-2xl p-6 shadow-sm border flex flex-col justify-between ${isDarkMode ? 'bg-slate-900/50 border-slate-700/50' : 'bg-white border-gray-100'}`}>
              <div className="flex items-center gap-3 mb-2">
                <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${isDarkMode ? 'bg-emerald-900/30' : 'bg-green-100'}`}>
                  <svg xmlns="http://www.w3.org/2000/svg" className={`h-6 w-6 ${isDarkMode ? 'text-emerald-400' : 'text-green-500'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 7v4a1 1 0 001 1h3m10-5h-3a1 1 0 00-1 1v4a1 1 0 001 1h3m-10 4h10" />
                  </svg>
                </div>
                <span className={`font-semibold ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>แผนก/หน่วยงาน</span>
              </div>
              <div className={`text-lg font-bold mb-1 ${isDarkMode ? 'text-slate-200' : 'text-gray-900'}`}>Production</div>
              <div className={`text-xs ${isDarkMode ? 'text-slate-500' : 'text-gray-400'}`}>รหัสแผนก: PD-001</div>
            </div>
            <div className={`rounded-2xl p-6 shadow-sm border flex flex-col justify-between ${isDarkMode ? 'bg-slate-900/50 border-slate-700/50' : 'bg-white border-gray-100'}`}>
              <div className="flex items-center gap-3 mb-2">
                <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${isDarkMode ? 'bg-purple-900/30' : 'bg-purple-100'}`}>
                  <svg xmlns="http://www.w3.org/2000/svg" className={`h-6 w-6 ${isDarkMode ? 'text-purple-400' : 'text-purple-500'}`} fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                </div>
                <span className={`font-semibold ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>วันที่ทำ PR</span>
              </div>
              <div className={`text-lg font-bold mb-1 ${isDarkMode ? 'text-slate-200' : 'text-gray-900'}`}>{new Date().toLocaleDateString('th-TH')}</div>
              <div className={`text-xs ${isDarkMode ? 'text-slate-500' : 'text-gray-400'}`}>เวลา: {new Date().toLocaleTimeString('th-TH', { hour: '2-digit', minute: '2-digit' })}</div>
            </div>
          </div>

          {/* Part No Input and Table */}
          <div className={`rounded-3xl shadow border overflow-visible ${isDarkMode ? 'bg-slate-900/50 border-slate-700/50' : 'bg-white border-green-100'}`}>
            <div className={`px-8 pt-8 pb-4 flex items-center justify-between rounded-t-3xl overflow-visible relative ${isDarkMode ? 'bg-gradient-to-r from-slate-800/50 via-slate-900/50 to-slate-800/50' : 'bg-gradient-to-r from-green-50 via-white to-green-100'}`}>
              {/* Back Button */}
              {/* <button
                onClick={() => router.push('/services/purchase')}
                className="absolute -top-1 left-1 flex items-center gap-2 px-3 py-2 bg-white hover:bg-green-50 border border-gray-200 hover:border-green-300 rounded-lg text-gray-600 hover:text-green-600 transition-all duration-200 shadow-sm hover:shadow-md group"
              >
                <FaArrowLeft className="text-xs group-hover:-translate-x-1 transition-transform duration-200" />
                <span className="text-xs font-medium">กลับไปยัง PR</span>
              </button> */}
              
              <div className="flex items-center gap-3">
                <span className={`text-xl font-bold ${isDarkMode ? 'text-emerald-400' : 'text-green-700'}`}>Purchase Requisition</span>
                <span className={`text-sm px-3 py-1 rounded-full shadow-sm border ${isDarkMode ? 'text-emerald-400 bg-emerald-900/20 border-emerald-800/50' : 'text-green-700 bg-green-50 border-green-200'}`}>{selectedParts.length} รายการ</span>
              </div>
              <div className="w-full md:w-96 relative">
                <input
                  ref={inputRef}
                  type="text"
                  placeholder="ค้นหา/เพิ่ม Part No..."
                  className={`px-4 py-2 border rounded-xl focus:outline-none focus:ring-2 text-sm w-full shadow-sm transition-all duration-200 ${isDarkMode ? 'border-slate-600 focus:ring-emerald-500/30 bg-slate-800/50 text-slate-200 placeholder-slate-500' : 'border-green-300 focus:ring-green-200 bg-white'}`}
                  value={search}
                  onChange={e => setSearch(e.target.value)}
                  onFocus={() => search && partNos.length > 0 ? setShowDropdown(true) : undefined}
                />
                {loading && (
                  <div className="absolute right-4 top-1/2 -translate-y-1/2">
                    <div className={`animate-spin rounded-full h-5 w-5 border-b-2 ${isDarkMode ? 'border-emerald-400' : 'border-green-400'}`}></div>
                  </div>
                )}
                {showDropdown && search && partNos.length > 0 && (
                  <div ref={dropdownRef} className={`absolute z-[9999] w-full border rounded-xl shadow-lg mt-2 max-h-56 overflow-y-auto ${isDarkMode ? 'bg-slate-900/95 border-slate-700/50 backdrop-blur-sm' : 'bg-white border-green-200'}`} style={{ zIndex: 9999 }}>
                    <div className="p-2">
                      <div className={`text-xs px-4 py-3 border-b rounded-t-lg ${isDarkMode ? 'text-slate-400 bg-slate-800/50 border-slate-700/50' : 'text-green-700 border-green-100 bg-green-50'}`}>
                        พบ {partNos.length} รายการ
                      </div>
                      {partNos.map((part, idx) => (
                        <div
                          key={part + '-' + idx}
                          className={`flex items-center px-4 py-3 cursor-pointer rounded-lg transition-all duration-200 ${selectedParts.includes(part) ? (isDarkMode ? 'bg-slate-700/50 border-l-4 border-emerald-500 font-semibold text-emerald-400' : 'bg-green-100 border-l-4 border-green-500 font-semibold text-green-800') : (isDarkMode ? 'hover:bg-slate-800/50 text-slate-300' : 'hover:bg-green-50')}`}
                          onClick={() => {
                            if (selectedParts.includes(part)) {
                              setSelectedParts(selectedParts.filter(p => p !== part));
                            } else {
                              setSelectedParts([...selectedParts, part]);
                            }
                          }}
                        >
                          {selectedParts.includes(part) && (
                            <span className={`inline-block w-3 h-3 rounded-full mr-3 ${isDarkMode ? 'bg-emerald-500' : 'bg-green-500'}`} title="Selected"></span>
                          )}
                          <span className={`${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>{part}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            </div>
            <div className="overflow-visible">
              <table className="min-w-full text-sm overflow-visible">
                <thead className={`${isDarkMode ? 'bg-gradient-to-r from-slate-800/50 via-slate-900/50 to-slate-800/50' : 'bg-gradient-to-r from-green-50 via-white to-green-100'}`}>
                  <tr>
                    <th className={`px-2 py-3 text-center font-semibold w-12 ${isDarkMode ? 'text-slate-500' : 'text-gray-400'}`}>ลบ</th>
                    <th className={`px-2 py-3 text-center font-semibold w-12 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>Item</th>
                    <th className={`px-2 py-3 text-center font-semibold w-32 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>Part No.</th>
                    <th className={`px-2 py-3 text-center font-semibold w-16 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>QTY</th>
                    <th className={`px-2 py-3 text-center font-semibold w-20 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>UNIT</th>
                    <th className={`px-2 py-3 text-center font-semibold w-26 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>Due Date</th>
                    <th className={`px-2 py-3 text-center font-semibold w-64 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>Objective</th>
                    <th className={`px-2 py-3 text-center font-semibold w-24 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>Vendor</th>
                    <th className={`px-2 py-3 text-center font-semibold w-16 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>Stock</th>
                    <th className={`px-2 py-3 text-center font-semibold w-20 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>PO No.</th>
                    <th className={`px-2 py-3 text-center font-semibold w-24 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>Price/Unit</th>
                    <th className={`px-2 py-3 text-center font-semibold w-20 ${isDarkMode ? 'text-slate-300' : 'text-gray-700'}`}>Plant</th>
                  </tr>
                </thead>
                <tbody className={`divide-y transition-colors ${isDarkMode ? 'bg-gradient-to-r from-slate-800/50 via-slate-900/50 to-slate-800/50' : 'bg-white divide-green-100 bg-gradient-to-r from-green-50 via-white to-green-100'}`}>
                  {selectedParts.length > 0 ? pagedParts.map((part, idx) => (
                    <tr key={part + '-row-' + ((page - 1) * rowsPerPage + idx)} className={`transition-all duration-150 ${isDarkMode ? 'hover:bg-slate-800/50' : 'hover:bg-green-50'}`}>
                      <td className="px-2 py-3 text-center w-12">
                        <button
                          type="button"
                          className={`flex items-center justify-center mx-auto p-2 rounded-full transition-colors duration-150 ${isDarkMode ? 'text-red-400 hover:text-red-300' : 'text-red-500 hover:text-red-700'}`}
                          title="ลบแถวนี้"
                          onClick={() => handleDeleteRow((page - 1) * rowsPerPage + idx)}
                        >
                          <RiDeleteBin6Line className="w-5 h-5" />
                        </button>
                      </td>
                      <td className={`px-2 py-3 font-bold text-center w-12 ${isDarkMode ? 'text-slate-200' : 'text-gray-800'}`}>{(page - 1) * rowsPerPage + idx + 1}</td>
                      <td className={`px-2 py-3 font-medium w-32 ${isDarkMode ? 'text-slate-200' : 'text-gray-800'}`}>{part}</td>
                      <td className="px-2 py-3 w-16">
                        <input type="number" className={`w-full h-10 px-2 py-2 border rounded text-center text-sm focus:ring-2 transition-colors ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 focus:border-emerald-500 focus:ring-emerald-500/30' : 'border-green-200 bg-green-50 focus:border-green-300 focus:ring-green-100'}`} defaultValue="1" />
                      </td>
                      <td className="px-2 py-3 w-20">
                        <select className={`w-full h-10 px-2 py-2 border rounded text-sm focus:ring-2 transition-colors ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 focus:border-emerald-500 focus:ring-emerald-500/30' : 'border-green-200 bg-green-50 focus:border-green-300 focus:ring-green-100'}`}>
                          <option>ชิ้น</option><option>ชุด</option><option>กิโลกรัม</option>
                        </select>
                      </td>
                      <td className={`px-2 py-5 whitespace-nowrap text-sm w-24 ${isDarkMode ? 'text-slate-300 border-r border-slate-700' : 'text-gray-700 border-r border-green-100'}`}>
                        <div className="relative w-full">
                          <DatePicker
                            selected={pagedDueDates[idx]}
                            onChange={date => handleRowDueDateChange((page - 1) * rowsPerPage + idx, date)}
                            dateFormat="dd/MM/yyyy"
                            placeholderText="เลือกวันที่"
                            className={`w-full h-10 px-2 py-2 pr-10 border rounded-lg text-sm focus:outline-none focus:ring-2 transition-all duration-200 ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 focus:ring-emerald-500/30 focus:border-emerald-500' : 'border-green-300 focus:ring-green-500 focus:border-green-500'}`}
                            calendarClassName="!bg-white !border-2 !border-green-200 !shadow-2xl !rounded-2xl absolute"
                            popperClassName="z-[9999]"
                            popperPlacement="bottom-start"
                          />
                          <span className="absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none">
                            <FaRegCalendarAlt className={`w-4 h-4 ${isDarkMode ? 'text-blue-400' : 'text-blue-500'}`} />
                          </span>
                        </div>
                      </td>
                      <td className="px-2 py-3 w-64">
                        <textarea 
                          className={`w-full min-h-[2.5rem] px-2 py-2 border rounded text-sm resize-none focus:ring-2 focus:outline-none transition-all duration-200 ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 placeholder-slate-500 focus:border-emerald-500 focus:ring-emerald-300/30' : 'border-green-200 bg-green-50 focus:border-green-500 focus:ring-green-300'}`}
                          placeholder="วัตถุประสงค์" 
                          rows={1}
                          onInput={(e) => {
                            const target = e.target as HTMLTextAreaElement;
                            target.style.height = 'auto';
                            target.style.height = Math.max(40, target.scrollHeight) + 'px';
                          }}
                        />
                      </td>
                      <td className="px-2 py-3 w-24">
                        <input type="text" className={`w-full h-10 px-2 py-2 border rounded text-sm focus:ring-2 transition-colors ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 placeholder-slate-500 focus:border-emerald-500 focus:ring-emerald-500/30' : 'border-green-200 bg-green-50 focus:border-green-300 focus:ring-green-100'}`} placeholder="ผู้จำหน่าย" />
                      </td>
                      <td className="px-2 py-3 w-16">
                        <input type="text" className={`w-full h-10 px-2 py-2 border rounded text-sm focus:ring-2 transition-colors ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 placeholder-slate-500 focus:border-emerald-500 focus:ring-emerald-500/30' : 'border-green-200 bg-green-50 focus:border-green-300 focus:ring-green-100'}`} placeholder="Stock" />
                      </td>
                      <td className="px-2 py-3 w-20">
                        <input type="text" className={`w-full h-10 px-2 py-2 border rounded text-sm focus:ring-2 transition-colors ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 placeholder-slate-500 focus:border-emerald-500 focus:ring-emerald-500/30' : 'border-green-200 bg-green-50 focus:border-green-300 focus:ring-green-100'}`} placeholder="PO No." />
                      </td>
                      <td className="px-2 py-3 w-24">
                        <input type="number" step="0.01" className={`w-full h-10 px-2 py-2 border rounded text-right text-sm focus:ring-2 transition-colors ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 placeholder-slate-500 focus:border-emerald-500 focus:ring-emerald-500/30' : 'border-green-200 bg-green-50 focus:border-green-300 focus:ring-green-100'}`} placeholder="0.00" />
                      </td>
                      <td className="px-2 py-3 w-20">
                        <select className={`w-full h-10 px-2 py-2 border rounded text-sm focus:ring-2 transition-colors ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 focus:border-emerald-500 focus:ring-emerald-500/30' : 'border-green-200 bg-green-50 focus:border-green-300 focus:ring-green-100'}`}>
                          <option>Plant 1</option><option>Plant 2</option><option>Plant 3</option>
                        </select>
                      </td>
                    </tr>
                  )) : (
                    <tr>
                      <td colSpan={14} className={`px-4 py-12 text-center italic ${isDarkMode ? 'text-slate-400 bg-gradient-to-r from-slate-800/50 via-slate-900/50 to-slate-800/50' : 'text-green-300 bg-gradient-to-r from-green-50 via-white to-green-100'}`}>กรุณาเลือก Part No จากฟอร์มด้านบน</td>
                    </tr>
                  )}
                  {/* Pagination row */}
                  {selectedParts.length > 0 && totalPages > 1 && (
                    <tr>
                      <td colSpan={14} className={`px-4 py-4 text-center border-t ${isDarkMode ? 'bg-gradient-to-r from-slate-800/50 via-slate-900/50 to-slate-800/50 border-slate-700' : 'bg-gradient-to-r from-green-50 via-white to-green-100 border-green-100'}`}>
                        <div className="inline-flex items-center gap-2">
                          <button
                            type="button"
                            className={`px-3 py-1 rounded-lg border transition-all duration-150 ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 hover:bg-slate-700/50' : 'border-green-200 bg-green-50 text-green-700 hover:bg-green-100'} ${page === 1 ? 'opacity-50 cursor-not-allowed' : ''}`}
                            onClick={() => page > 1 && setPage(page - 1)}
                            disabled={page === 1}
                          >ย้อนกลับ</button>
                          <span className={`mx-2 font-medium ${isDarkMode ? 'text-slate-200' : 'text-green-700'}`}>หน้า {page} / {totalPages}</span>
                          <button
                            type="button"
                            className={`px-3 py-1 rounded-lg border transition-all duration-150 ${isDarkMode ? 'border-slate-600 bg-slate-800/50 text-slate-200 hover:bg-slate-700/50' : 'border-green-200 bg-green-50 text-green-700 hover:bg-green-100'} ${page === totalPages ? 'opacity-50 cursor-not-allowed' : ''}`}
                            onClick={() => page < totalPages && setPage(page + 1)}
                            disabled={page === totalPages}
                          >ถัดไป</button>
                        </div>
                      </td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div> {/* end table container */}
            <div className={`w-full flex justify-center py-8 rounded-b-3xl ${isDarkMode ? 'bg-gradient-to-r from-slate-800/50 via-slate-900/50 to-slate-800/50' : 'bg-gradient-to-r from-green-50 via-white to-green-100'}`}>
              <button
                type="button"
                className={`px-8 py-3 rounded-xl font-bold text-lg shadow-lg transition-all duration-200 focus:outline-none focus:ring-4 ${isDarkMode ? 'bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-500 hover:to-emerald-700 text-white focus:ring-emerald-300/50' : 'bg-gradient-to-r from-green-500 to-green-600 hover:from-green-500 hover:to-green-700 text-white focus:ring-green-300'}`}
                onClick={() => {/* TODO: implement save logic */}}
              >
                บันทึก
              </button>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}